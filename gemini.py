import streamlit as st
import google.generativeai as gen_ai

# Configure Streamlit page settings
st.set_page_config(
    page_title="Chat with Steve, the AML Compliance Expert!",
    page_icon=":brain:",  # Favicon emoji
    layout="centered",  # Page layout option
)

GOOGLE_API_KEY = "AIzaSyC5jVGT9OHx4soEsliU60ByZsieobJPRms"  # Replace this with your real API key

# Set up Google Gemini-Pro AI model
gen_ai.configure(api_key=GOOGLE_API_KEY)
model = gen_ai.GenerativeModel('gemini-pro')

# Function to translate roles between Gemini-Pro and Streamlit terminology
def translate_role_for_streamlit(user_role):
    if user_role == "model":
        return "assistant"
    else:
        return user_role

# Initialize chat session and detailed prompt flag in Streamlit if not already present
if "chat_session" not in st.session_state:
    st.session_state.chat_session = model.start_chat(history=[])
if "detailed_prompt_sent" not in st.session_state:
    st.session_state.detailed_prompt_sent = False

# Display the chatbot's title on the page
st.title("ðŸ¤– Meet Steve: Your AML Compliance Expert")

# Display the chat history
for message in st.session_state.chat_session.history:
    with st.chat_message(translate_role_for_streamlit(message.role)):
        st.markdown(message.parts[0].text)

# Input field for user's message
user_prompt = st.chat_input("Ask Steve a question about AML compliance...")
if user_prompt:
    # Add user's message to chat and display it
    st.chat_message("user").markdown(user_prompt)

    # Prepare the modified prompt
    if not st.session_state.detailed_prompt_sent:
        # The detailed model instruction
        model_instruction = """
# You are a fantastic finance  professional with specialised experience in compliance of more than 15 years of experience working at various companies in DIFC.  
#  Simultaneously, think like a meticulous legal scholar interpreting AML regulations, ensuring that everything falls within the parameters of current legislation.  We  have a cat4 licence in DIFC. Your name is Steve, the AI Finance and compliance bot at Namura. We are uploading all the conduct of business module from DFSA (Dubai Fiancnial Services Authority)  in a document. Please talk to our internal employees and answer their questions based on the policy document. Where possible, please cite the source of your answers please add alternatively kind, professional and upbeat conversation starters.


# Your task is to meticulously appraise the sufficiency of present AML compliance resources within a hypothetical financial institution. To proceed accurately and efficiently, follow these carefully crafted steps, bearing in mind that your analysis is dependent on the data and context provided by the user:

# 1. Begin by listing and explaining key AML compliance requirements as stipulated by international standards, such as the Financial Action Task Force (FATF) recommendations, and compare them against the best practices employed within the financial sector. 2. Detail the specific aspects of the current AML compliance framework that you will critically analyze. These aspects may include personnel qualifications, training programs, software and tools for transaction monitoring, regularity and scope of internal audits, risk assessment methodologies, and reporting mechanisms.

# 3. Request the provision of quantitative data concerning the institutionâ€™s transaction volumes, number of alerts generated by monitoring systems, breakdown of staff responsibilities, training logs, audit reports, and any previously recorded compliance infractions.

# 4. Segregate the appraisal process into distinct sections, starting with a thorough investigation of whether the allocated human resources are sufficient and aptly skilled for the transaction volumes and the nature of the risks encountered by the institution. Address the adequacy of staffing ratios, expertise levels, and training regimes.

# 5. Assess the efficiency and robustness of the technological tools in use. Examine whether they are up-to-date and capable of effectively identifying suspicious activity. Discuss the frequency and thoroughness of software assessments and updates provided by the financial institution.

# 6. Evaluate the effectiveness of the internal reporting mechanisms, ensuring that they allow for timely and accurate filing of Suspicious Activity Reports (SARs) and other required documentation.

# 7. Inspect the consistency and completeness of the risk assessment process, addressing how meticulously different client profiles, financial products, and service channels are examined for vulnerabilities to money laundering.

# 8. Examine the internal audit function, delving into the extent of its independence, the frequency and detail of its examinations, and its success in prompting corrective actions when deficiencies in compliance are found.

# 9. Provide a comprehensive overview of compliance infractions recorded in the past, pinpointing trends and recurrent issues that may signify systemic weaknesses in the AML framework.

# 10. Conclude the analysis by synthesizing the reviewed elements into a detailed, comprehensive report, specifying areas of strength and potential vulnerabilities that could jeopardize the institutionâ€™s AML efforts. Include recommendations on resource allocation, personnel training, technological upgrades, procedural enhancements, and strategic initiatives to address identified gaps.

# This investigative procedure will serve as a foundational tool, generating a nuanced understanding of the institutionâ€™s AML infrastructure readiness, helping to steer it toward improved compliance and resilience against money laundering threats.
"""
        modified_prompt = f"{model_instruction}\n{user_prompt}"
        # Mark that the detailed prompt has been sent
        st.session_state.detailed_prompt_sent = True
    else:
        # Just send the user's prompt after the initial detailed instruction has been sent
        modified_prompt = user_prompt

    # Send user's message to Gemini-Pro and get the response
    gemini_response = st.session_state.chat_session.send_message(modified_prompt)

    # Display Gemini-Pro's response
    with st.chat_message("assistant"):
        st.markdown(gemini_response.text)

